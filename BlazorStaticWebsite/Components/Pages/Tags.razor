@page "/tags/{TagEncodedName}"
@page "/tags"
@using BlazorStatic
@using BlazorStatic.Services
@using BlazorStaticWebsite.Components.Blog
@using System.Net
@inject BlazorStaticContentService<BlogFrontMatter> BlogService


@if (TagEncodedName == null)
{
    <div class="flex flex-wrap justify-between gap-1">
        @{
            var tagsWithCount = BlogService.Posts
                .SelectMany(x => x.Tags)
                .GroupBy(x => x)
                .Select(group => new { Tag = group.Key, Count = group.Count() })
                .OrderByDescending(x => x.Count);

            foreach(var tagGroup in tagsWithCount)
            {
                <a class="text-primary-500 hover:text-primary-400 mr-3 text-sm font-medium uppercase" href="@($"{BlogService.Options.Tags.TagsPageUrl}/{tagGroup.Tag.EncodedName}")"> @tagGroup.Tag.Name (@tagGroup.Count) </a>
            }
        }
    </div>
    return;
}


<div class="divide-y divide-gray-700">
    <div class="space-y-2 pb-8 pt-6 md:space-y-5">
        <h1 class="font-sans md:leading-14 text-3xl font-extrabold leading-9 tracking-tight text-gray-100 sm:text-4xl sm:leading-10 md:text-6xl">@(tag?.Name ?? TagEncodedName)</h1>
        <p class="text-lg leading-7 text-gray-400">
            Blog posts tagged by
            <span class="text-primary-300">@(tag?.Name ?? TagEncodedName)</span>
        </p>
    </div>
    <BlogPostsList Posts="posts"/>
</div>

@code {

    [Parameter] public string? TagEncodedName { get; set; }
    Tag? tag;

    List<Post<BlogFrontMatter>>? posts;

    protected override void OnInitialized()
    {
        if (string.IsNullOrWhiteSpace(TagEncodedName)) return;
        tag = BlogService.AllTags.FirstOrDefault(x=>x.Value.EncodedName == TagEncodedName).Value;
        if (tag == null) return;
        posts = BlogService.Posts
            .Where(x => x.Tags.Any(c => c.EncodedName == TagEncodedName))
            .ToList();

    }

}
